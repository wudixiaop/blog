<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Rocky Lai @ Github</title><link href="http://wudixiaop.github.io/" rel="alternate"></link><link href="http://wudixiaop.github.io/feeds%5Crocky-lai.atom.xml" rel="self"></link><id>http://wudixiaop.github.io/</id><updated>2014-11-10T21:38:00+08:00</updated><entry><title>来，一起看看MonoBehavior内部事件执行顺序</title><link href="http://wudixiaop.github.io/lai-yi-qi-kan-kan-monobehaviornei-bu-shi-jian-zhi-xing-shun-xu.html" rel="alternate"></link><updated>2014-11-10T21:38:00+08:00</updated><author><name>Rocky Lai</name></author><id>tag:wudixiaop.github.io,2014-11-10:lai-yi-qi-kan-kan-monobehaviornei-bu-shi-jian-zhi-xing-shun-xu.html</id><summary type="html">&lt;h3&gt;&lt;strong&gt;写在最前面&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;或许对于大部分Unity3D程序员来说，第一次接触脚本编写的时候都是从MonoBehavior开始的。MonoBehavior是Uniy3d脚本编写核心的类之一， 它预先定义好了很多事件，并且这些事件按照预先定义好顺序执行。了解MonoBehavior提供的这些事件的执行顺序，是我们进一步提高脚步编程和了解Unity3D内部逻辑的必要一步。我们先从MonoBehavior提供的事件说起。&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;MonoBehavior都提供了什么事件&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;MonoBehavior提供的事件从编辑器到游戏结束都有涉及。下面列举一些常用的，更详列表可以参照&lt;a href="http://docs.unity3d.com/ScriptReference/MonoBehaviour.html"&gt;这个页面&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;与编辑相关&lt;/strong&gt;&lt;br /&gt;
&lt;table class="table table-striped table-hover"&gt;
    &lt;theader&gt;
        &lt;th&gt;名称&lt;/th&gt;
        &lt;th&gt;注释&lt;/th&gt;
    &lt;/theader&gt;
    &lt;tbody&gt;
        &lt;tr&gt;
            &lt;td&gt;Reset&lt;/td&gt;
            &lt;td&gt;Reset to default values.&lt;/td&gt;
        &lt;/tr&gt;
    &lt;/tbody&gt;
&lt;/table&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update相关&lt;/strong&gt;
&lt;table class="table table-striped table-hover"&gt;
    &lt;theader&gt;
        &lt;th&gt;名称&lt;/th&gt;
        &lt;th&gt;注释&lt;/th&gt;
    &lt;/theader&gt;
    &lt;tbody&gt;
        &lt;tr&gt;
            &lt;td&gt;FixedUpdate&lt;/td&gt;
            &lt;td&gt;This function is called every fixed framerate frame, if the MonoBehaviour is enabled.&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;Update&lt;/td&gt;
            &lt;td&gt;Update is called every frame, if the MonoBehaviour is enabled.&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;LateUpdate&lt;/td&gt;
            &lt;td&gt;LateUpdate is called every frame, if the Behaviour is enabled.&lt;/td&gt;
        &lt;/tr&gt;
    &lt;/tbody&gt;
&lt;/table&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;生命周期相关&lt;/strong&gt;&lt;br /&gt;
&lt;table class="table table-striped  table-hover"&gt;
    &lt;theader&gt;
        &lt;th&gt;名称&lt;/th&gt;
        &lt;th&gt;注释&lt;/th&gt;
    &lt;/theader&gt;
    &lt;tbody&gt;
        &lt;tr&gt;
            &lt;td&gt;Awake&lt;/td&gt;
            &lt;td&gt;Awake is called when the script instance is being loaded.&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;OnEnable&lt;/td&gt;
            &lt;td&gt;This function is called when the object becomes enabled and active.&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;OnDisable&lt;/td&gt;
            &lt;td&gt;This function is called when the behaviour becomes disabled () or inactive.&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;OnDestroy&lt;/td&gt;
            &lt;td&gt;This function is called when the MonoBehaviour will be destroyed.&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;OnApplicationFocus&lt;/td&gt;
            &lt;td&gt;Sent to all game objects when the player gets or loses focus.&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;OnApplicationPause&lt;/td&gt;
            &lt;td&gt;Sent to all game objects when the player pauses.&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;OnApplicationQuit&lt;/td&gt;
            &lt;td&gt;Sent to all game objects before the application is quit.&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;Start&lt;/td&gt;
            &lt;td&gt;Start is called on the frame when a script is enabled just before any of the Update methods is called the first time.&lt;/td&gt;
        &lt;/tr&gt;
    &lt;/tbody&gt;
&lt;/table&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;物理系统相关&lt;/strong&gt;
&lt;table class="table table-striped  table-hover"&gt;
    &lt;theader&gt;
        &lt;th&gt;名称&lt;/th&gt;
        &lt;th&gt;注释&lt;/th&gt;
    &lt;/theader&gt;
    &lt;tbody&gt;
        &lt;tr&gt;
            &lt;td&gt;OnCollisionEnter&lt;/td&gt;
            &lt;td&gt;OnCollisionEnter is called when this collider/rigidbody has begun touching another rigidbody/collider.&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;OnCollisionStay&lt;/td&gt;
            &lt;td&gt;OnCollisionStay is called once per frame for every collider/rigidbody that is touching rigidbody/collider.&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;OnCollisionExit&lt;/td&gt;
            &lt;td&gt;OnCollisionExit is called when this collider/rigidbody has stopped touching another rigidbody/collider.&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;OnCollisionEnter2D&lt;/td&gt;
            &lt;td&gt;Sent when an incoming collider makes contact with this object's collider (2D physics only).&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;OnCollisionStay2D&lt;/td&gt;
            &lt;td&gt;Sent each frame where a collider on another object is touching this object's collider (2D physics only).&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;OnCollisionExit2D&lt;/td&gt;
            &lt;td&gt;Sent when a collider on another object stops touching this object's collider (2D physics only).&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;OnTriggerEnter&lt;/td&gt;
            &lt;td&gt;OnTriggerEnter is called when the Collider other enters the trigger.&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;OnTriggerStay&lt;/td&gt;
            &lt;td&gt;OnTriggerStay is called once per frame for every Collider other that is touching the trigger.&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;OnTriggerExit&lt;/td&gt;
            &lt;td&gt;OnTriggerExit is called when the Collider other has stopped touching the trigger.&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;OnTriggerEnter2D&lt;/td&gt;
            &lt;td&gt;Sent when another object enters a trigger collider attached to this object (2D physics only).&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;OnTriggerStay2D&lt;/td&gt;
            &lt;td&gt;Sent each frame where another object is within a trigger collider attached to this object (2D physics only).&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;OnTriggerExit2D&lt;/td&gt;
            &lt;td&gt;Sent when another object leaves a trigger collider attached to this object (2D physics only).&lt;/td&gt;
        &lt;/tr&gt;
    &lt;/tbody&gt;
&lt;/table&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;输入系统相关&lt;/strong&gt;
&lt;table class="table table-striped  table-hover"&gt;
    &lt;theader&gt;
        &lt;th&gt;名称&lt;/th&gt;
        &lt;th&gt;注释&lt;/th&gt;
    &lt;/theader&gt;
    &lt;tbody&gt;
        &lt;tr&gt;
            &lt;td&gt;OnMouseDown&lt;/td&gt;
            &lt;td&gt;OnMouseDown is called when the user has pressed the mouse button while over the GUIElement or Collider.&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;OnMouseOver&lt;/td&gt;
            &lt;td&gt;OnMouseOver is called every frame while the mouse is over the GUIElement or Collider.&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;OnMouseUp&lt;/td&gt;
            &lt;td&gt;OnMouseUp is called when the user has released the mouse button.&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;OnMouseDrag&lt;/td&gt;
            &lt;td&gt;OnMouseDrag is called when the user has clicked on a GUIElement or Collider and is still holding down the mouse.&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;OnMouseEnter&lt;/td&gt;
            &lt;td&gt;OnMouseEnter is called when the mouse entered the GUIElement or Collider.&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;OnMouseExit&lt;/td&gt;
            &lt;td&gt;OnMouseExit is called when the mouse is not any longer over the GUIElement or Collider.&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;OnMouseUpAsButton&lt;/td&gt;
            &lt;td&gt;OnMouseUpAsButton is only called when the mouse is released over the same GUIElement or Collider as it was pressed.&lt;/td&gt;
        &lt;/tr&gt;
    &lt;/tbody&gt;
&lt;/table&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;渲染相关&lt;/strong&gt;
&lt;table class="table table-striped table-hover"&gt;
    &lt;theader&gt;
        &lt;th&gt;名称&lt;/th&gt;
        &lt;th&gt;注释&lt;/th&gt;
    &lt;/theader&gt;
    &lt;tbody&gt;
        &lt;tr&gt;
            &lt;td&gt;OnPreCull&lt;/td&gt;
            &lt;td&gt;OnPreCull is called before a camera culls the scene.&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;OnBecameVisible&lt;/td&gt;
            &lt;td&gt;OnBecameVisible is called when the renderer became visible by any camera.&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;OnBecameInvisible&lt;/td&gt;
            &lt;td&gt;OnBecameInvisible is called when the renderer is no longer visible by any camera.&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;OnWillRenderObject&lt;/td&gt;
            &lt;td&gt;OnWillRenderObject is called once for each camera if the object is visible.&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;OnPreRender&lt;/td&gt;
            &lt;td&gt;OnPreRender is called before a camera starts rendering the scene.&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;OnRenderObject&lt;/td&gt;
            &lt;td&gt;OnRenderObject is called after camera has rendered the scene.&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;OnPostRender&lt;/td&gt;
            &lt;td&gt;OnPostRender is called after a camera finished rendering the scene.&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;OnRenderImage&lt;/td&gt;
            &lt;td&gt;OnRenderImage is called after all rendering is complete to render image.&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;OnGUI&lt;/td&gt;
            &lt;td&gt;OnGUI is called for rendering and handling GUI events.&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;OnDrawGizmos&lt;/td&gt;
            &lt;td&gt;Implement OnDrawGizmos if you want to draw gizmos that are also pickable and always drawn.&lt;/td&gt;
        &lt;/tr&gt;
    &lt;/tbody&gt;
&lt;/table&gt;&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;用图来表示MonoBehavior事件执行顺序&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&lt;img alt="MonoBehavior事件执行顺序" src="Images/monobehaviour_flowchart.svg" /&gt;&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;总结:&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;首次加载场景时执行&lt;strong&gt;Awake()&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Start()&lt;/strong&gt;只在第一帧才执行, &lt;strong&gt;Start()&lt;/strong&gt;在&lt;strong&gt;Awake()&lt;/strong&gt;之后执行&lt;/li&gt;
&lt;li&gt;Update的执行顺序是: &lt;strong&gt;FixedUpdate()&lt;/strong&gt; -&amp;gt; &lt;strong&gt;Update()&lt;/strong&gt; -&amp;gt; &lt;strong&gt;LateUpdate()&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;以每一帧的&lt;strong&gt;Update()&lt;/strong&gt;事件作分界线：  &lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Update()之前&lt;/strong&gt;：&lt;strong&gt;物理系统&lt;/strong&gt;和&lt;strong&gt;输入系统&lt;/strong&gt;相关事件先执行，如&lt;strong&gt;OnTriggerXXX&lt;/strong&gt;和&lt;strong&gt;OnMouseXXX&lt;/strong&gt;事件。此处&lt;strong&gt;XXX&lt;/strong&gt;是占位符，如&lt;strong&gt;OnTriggerXXX&lt;/strong&gt;可以代表&lt;strong&gt;OnTriggerEnter&lt;/strong&gt;或者&lt;strong&gt;OnTriggerExit&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Update()之后&lt;/strong&gt;：&lt;strong&gt;场景渲染&lt;/strong&gt;和&lt;strong&gt;协程&lt;/strong&gt;，如&lt;strong&gt;OnRenderImage()&lt;/strong&gt;和&lt;strong&gt;yield WWW&lt;/strong&gt;语句&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;协程中，除了&lt;strong&gt;WaitForFixedUpdate&lt;/strong&gt;是在&lt;strong&gt;FixedUpdate&lt;/strong&gt;之后，&lt;strong&gt;Update&lt;/strong&gt;之前执行，其他的都是在&lt;strong&gt;Update&lt;/strong&gt;之后，&lt;strong&gt;场景渲染&lt;/strong&gt;前执行&lt;/li&gt;
&lt;li&gt;GUI事件&lt;strong&gt;OnGUI&lt;/strong&gt;在场景渲染完之后执行&lt;/li&gt;
&lt;li&gt;当对象被销毁时执行&lt;strong&gt;OnDestory()&lt;/strong&gt;事件&lt;/li&gt;
&lt;li&gt;当游戏退出时执行&lt;strong&gt;OnApplicationQuit()&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;OnEnable()&lt;/strong&gt;和&lt;strong&gt;OnDisable()&lt;/strong&gt;  &lt;ul&gt;
&lt;li&gt;&lt;strong&gt;OnEnable()&lt;/strong&gt;只有在Object是Active的状态下才能用，一般是Object被初始化或者Object从disable到active过程中被调用&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;OnDisable()&lt;/strong&gt;只有到Object从active到disable状态才被调用&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Unity3D"></category></entry><entry><title>关于Unity3D编辑器一些事儿</title><link href="http://wudixiaop.github.io/guan-yu-unity3dbian-ji-qi-yi-xie-shi-er.html" rel="alternate"></link><updated>2014-11-05T22:30:00+08:00</updated><author><name>Rocky Lai</name></author><id>tag:wudixiaop.github.io,2014-11-05:guan-yu-unity3dbian-ji-qi-yi-xie-shi-er.html</id><summary type="html">&lt;p&gt;这里描述下Unity3D编辑器使用过程中遇到的坑及其解决方法。 &lt;/p&gt;
&lt;hr /&gt;
&lt;h3&gt;&lt;strong&gt;事件一：Unity3d编辑器启动时默认打开最近一次打开的项目&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;默认设置中，Unity3D启动时会自动打开默认最近一次打开的项目。每当只想打开小项目，而偏偏上次打开过一个大项目时，这点让人很抓狂。&lt;br /&gt;
&lt;strong&gt;解决方法:&lt;/strong&gt;  &lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;在编辑器中打开&lt;strong&gt;Unity Preferences&lt;/strong&gt;窗口,通过 &lt;strong&gt;Edit-&amp;gt;Preferences...&lt;/strong&gt;打开&lt;/li&gt;
&lt;li&gt;在&lt;strong&gt;General&lt;/strong&gt;选项卡中把&lt;strong&gt;Always Show Project Wizard&lt;/strong&gt;勾选上&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;br/&gt;&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;事件二：Project Wizard中最近打开项目记录删除不了&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;一直不明白为啥不让删除呢？&lt;br /&gt;
&lt;strong&gt;解决方法：&lt;/strong&gt;  &lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;方法一：让项目地址失效&lt;/strong&gt;  &lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;重名名项目文件夹&lt;/li&gt;
&lt;li&gt;把项目移动到别的文件夹 &lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;方法二：修改注册表&lt;/strong&gt;  &lt;blockquote&gt;
&lt;p&gt;删除&lt;strong&gt;HKEY_CURRENT_USER\Software\Unity Technologies\Unity Editor 4.x&lt;/strong&gt;下面以&lt;strong&gt;RecentlyUsedProjectPaths&lt;/strong&gt;开头的项&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;以后继续补充...&lt;/p&gt;</summary><category term="Unity3D"></category></entry><entry><title>ShaderlabVS Release Page</title><link href="http://wudixiaop.github.io/shaderlabvs-release-page.html" rel="alternate"></link><updated>2014-10-28T21:20:00+08:00</updated><author><name>Rocky Lai</name></author><id>tag:wudixiaop.github.io,2014-10-28:shaderlabvs-release-page.html</id><summary type="html">&lt;h2&gt;&lt;em&gt;Latest Version - V0.5&lt;/em&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;[2014-10-28] V0.5 release note:&lt;/strong&gt; &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Add braces matching&lt;/li&gt;
&lt;li&gt;Add outlining&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Download:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/wudixiaop/ShaderlabVS/releases/download/0.5/ShaderlabVS-0.5.zip"&gt;Github&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://pan.baidu.com/s/1qW9aR5E"&gt;BaiduPan&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;A introduction of ShaderlabVS can be found at &lt;a href="https://github.com/wudixiaop/ShaderlabVS/blob/master/README.md"&gt;https://github.com/wudixiaop/ShaderlabVS/blob/master/README.md&lt;/a&gt;. If you have feedbacks or questions, send email to me. My email is rockylai@qq.com.&lt;/strong&gt;  &lt;/p&gt;
&lt;h3&gt;&lt;em&gt;Screenshot&lt;/em&gt;&lt;/h3&gt;
&lt;p&gt;&lt;img alt="Preview" src="https://github.com/wudixiaop/ShaderlabVS/raw/master/img/Highlighting.PNG" /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;&lt;em&gt;History:&lt;/em&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;[2014-10-19] V0.4 release note:&lt;/strong&gt; &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Add support for .cginc and .glslinc file&lt;/li&gt;
&lt;li&gt;Add more keywords support&lt;/li&gt;
&lt;li&gt;Syntax highlighting is case insensitive now&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Download:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/wudixiaop/ShaderlabVS/releases/download/0.4/ShaderlabVS.zip"&gt;Github Relase Page&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://pan.baidu.com/s/1o6sPOUI"&gt;BaiduPan&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;V0.3 release note:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Support Signature help feature&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Download:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/wudixiaop/ShaderlabVS/releases/download/0.3/ShaderlabVS-0.3.zip"&gt;Github Release page&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://pan.baidu.com/s/1eQEJQHO"&gt;BaiduPan&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;</summary><category term="ShaderlabVS"></category></entry><entry><title>Why I start ShaderlabVS</title><link href="http://wudixiaop.github.io/why-i-start-shaderlabvs.html" rel="alternate"></link><updated>2010-10-19T18:09:00+08:00</updated><author><name>Rocky Lai</name></author><id>tag:wudixiaop.github.io,2014-08-31:why-i-start-shaderlabvs.html</id><summary type="html">&lt;p&gt;Last month, &lt;a href="http://unityvs.com/"&gt;SyntaxTree&lt;/a&gt;, the creator of UnityVS plugin for Visual Studio was acquired by Microsoft. Microsoft have published the UnityVS to Visual Studio users for free at the end of July.   &lt;/p&gt;
&lt;p&gt;UnityVS is cool tool that make it's possible to debug Unity3D scripts in VS. But the tool is not support the Unity3D shaderlab syntax. it's pain for me to to read/write shader in VS, So I created the ShaderlabVS to help myself and may would help someone who need it.&lt;/p&gt;</summary><category term="ShaderlabVS"></category></entry></feed>